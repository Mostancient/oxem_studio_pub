<html>
<head>
    <title>Задание: Ферма ООП</title>
</head>
<body>

<?php

class Cow { // Описываем объект КОРОВА

    public $milk; // делаем свойство коровы доступным из любого места (глобальная область)
    public $id; // делаем свойство коровы доступным из любого места (глобальная область)

    public function __construct($id){  // определяем конструктор коровы, который будет выплнен при создании КОРОВЫ
        $this->id = $id; // присваеваем id коровке
        echo "Создана корова ID:".$this->id."<br>"; // соообщаем ID созданной коровы
    }

    public function doyka(){ // метод доит корову
        return $this->milk = rand (8, 12); // определяем надой из указанного диапозона =)
    }
}

class Hen { // Описываем объект КУРИЦА
  public $eggs; // делаем свойство коровы доступным из любого места (глобальная область)
  public $id; // делаем свойство коровы доступным из любого места (глобальная область)

  public function __construct($id){  // определяем конструктор коровы, который будет выплнен при создании КОРОВЫ
      $this->id = $id; // присваеваем id коровке
      echo "Создана курица ID:".$this->id."<br>"; // сообщаем ID созданной курицы
  }

  public function collect_eggs(){ // метод доит корову
      return $this->eggs = rand (0, 1); // определяем надой из указанного диапозона =)
  }

}

class Crib { // Описываем объект ХЛЕВ

    # делаем свойства доступными методам собственного класса
    protected $num_cows;
    protected $num_hens;
    protected $cow;
    protected $hen;
    protected $total_milk;
    protected $total_eggs;

    public function __construct(){ // определяем конструктор, который будет выплнен при создании объекта ХЛЕВ
        echo "ХЛЕВ создан, можно заселять животных <br>"; // сообщаем, что хлев создан и можно заселять животных
    }

    function add_cows($num_cows){ // метод добавления коров в хлев
        $this->num_cows = $num_cows; // получаем входящие значение нужного количества коров и присваеваем его свойству объекта
        for ($i=1; $i < $this->num_cows+1; $i++) {
            $this->cow[$i] = new Cow($i); // создаём нужный массив коров
        }
    }

    function add_hens($num_hens){ // метод добавления куриц в хлев
        $this->num_hens = $num_hens; // получаем входящие значение нужного количества куриц и присваеваем его свойству объекта
        for ($i=1; $i < $this->num_hens+1; $i++) {
            $this->hen[$i] = new Hen($i); // создаём нужный массив куриц
        }
    }

    function product_sbor(){ // метод сбора продукции
        foreach ($this->cow as $key => $value) { // собираем надой с массива всех коров
            $this->total_milk = $this->total_milk + $value->doyka(); // доим корову
            echo "\n\n Надой с коровы id".$value->id." \n\n составил литров:".$value->milk."<br>";  // выводим надой с одной коровы
            $value->milk = 0; // после дойки сбрасываем количества молока в корове =)
        }

        foreach ($this->hen as $key => $value) { // собираем яйца с массива всех кур
            $this->total_eggs = $this->total_eggs + $value->collect_eggs(); // собираяем яйца с курицы
            echo "\n\n С курицы id".$value->id." \n\n собрали яиц:".$value->eggs."<br>"; // выводим количество яиц с одной курицы
            $value->eggs = 0; // после сбрасываем количество яиц в курице =)
        }
        echo "\n\n Итого собрано ".$this->total_eggs." яиц и ".$this->total_milk." литров молока.";
    }
}

$crib = new Crib(); // создаём объект ХЛЕВ
$crib->add_cows(10); // Создаём коров и добавляем их в хлев
$crib->add_hens(20); // Создаём куриц и добавляем их в хлев
$crib->product_sbor(); // собираем с хлева продукцию
 ?>

</body>
</html>
